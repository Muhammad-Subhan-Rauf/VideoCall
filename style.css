/* call_style.css */
/* Existing styles from your provided CSS (style.css) should be here as well for this to work standalone */

/* Import existing styles from style.css -  Copy all styles from style.css here */
body {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    margin: 0;
    padding: 20px;
    min-height: 100vh;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: #fff;
    display: flex;
    flex-direction: column;
    align-items: center;
}

h1 {
    font-size: 2.5rem;
    margin-bottom: 1rem;
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
    animation: fadeIn 1s ease-in;
}

#videoContainer {
    position: relative;
    width: 90%;
    max-width: 1000px;

    background: #000;
    border-radius: 15px;
    overflow: hidden;
    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.4);
    opacity: 0;
    transform: translateY(20px);
    transition: all 0.5s ease;
}

#videoContainer.active {
    opacity: 1;
    transform: translateY(0);
}

#remoteVideo {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: all 0.5s ease; /* Transition added for smooth swap */
}

#localVideo {
    position: absolute;
    bottom: 20px;
    right: 20px;
    width: 180px;
    height: 120px;
    border-radius: 8px;
    border: 3px solid rgba(255, 255, 255, 0.9);
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
    transition: all 0.5s ease; /* Transition added for smooth swap */
    z-index: 1; /* Ensure local video is above remote when small */
}

#localVideo:hover {
    transform: scale(1.05);
}

#usersList {
    list-style: none;
    padding: 0;
    margin: 20px 0;
    width: 90%;
    max-width: 600px;
}

#usersList li {
    background: rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(5px);
    padding: 15px;
    margin: 10px 0;
    border-radius: 10px;
    display: flex;
    justify-content: space-between;
    align-items: center;
    animation: slideIn 0.4s ease-out forwards;
    opacity: 0;
    transform: translateX(-20px);
}

@keyframes slideIn {
    to {
        opacity: 1;
        transform: translateX(0);
    }
}

#usersList button {
    background: linear-gradient(45deg, #4CAF50, #45a049);
    border: none;
    padding: 8px 20px;
    border-radius: 25px;
    color: white;
    cursor: pointer;
    transition: all 0.3s ease;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
}

#usersList button:hover {
    transform: translateY(-2px);
    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.3);
}

.languages {
    display: flex; /* Changed to flex to accommodate input nicely */
    align-items: center; /* Vertically align input in the center */
    padding: 15px 20px; /* Adjust padding to match list items */
    width: 90%;
    max-width: 800px;
    margin: 20px 0;
    background: rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(5px);
    border-radius: 15px;
}


.language-search-input {
    flex-grow: 1; /* Input takes up available space */
    background: transparent; /* Transparent background to blend with languages container */
    border: none; /* Remove default border */
    border-bottom: 2px solid rgba(255, 255, 255, 0.5); /* Add a subtle bottom border */
    color: white; /* White text color */
    padding: 10px 15px; /* Padding for input */
    font-size: 1rem; /* Adjust font size as needed */
    outline: none; /* Remove focus outline */
}

.language-search-input::placeholder {
    color: rgba(255, 255, 255, 0.7); /* Lighter color for placeholder text */
}


#endCallButton {
    /* position: fixed; /* REMOVED - container handles positioning */
    /* bottom: 30px;  /* REMOVED - container handles positioning */
    /* left: 50%;    /* REMOVED - container handles positioning */
    /* transform: translateX(-50%); /* REMOVED - container handles positioning */
    /* padding: 12px 35px; /* ADJUSTED in button-container common styles */
    background: linear-gradient(45deg, #ff4444, #cc0000);
    border: none;
    border-radius: 50%; /* Make it a circle */
    color: white;
    font-weight: bold;
    cursor: pointer;
    box-shadow: 0 8px 25px rgba(255, 68, 68, 0.3);
    transition: all 0.3s ease;
    animation: pulse 1.5s infinite;
    width: 80px; /* Set width for circle */
    height: 80px; /* Set height for circle */
    display: flex;       /* Center content */
    align-items: center; /* Center content */
    justify-content: center; /* Center content */
    font-size: 1.2em;    /* Adjust font size if needed */
}

#endCallButton:hover {
    /* transform: translateX(-50%) scale(1.05); /* REMOVED - only scale */
    transform: scale(1.05);
    box-shadow: 0 10px 30px rgba(255, 68, 68, 0.4);
}

@keyframes pulse {
    0% { transform: scale(1); }
    50% { transform: scale(1.05); }
    100% { transform: scale(1); }
}

@keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
}

#cameraSelect {
    position: fixed;
    top: 20px;
    right: 20px;
    padding: 8px 15px;
    border-radius: 20px;
    border: 2px solid rgba(255, 255, 255, 0.3);
    background: rgba(0, 0, 0, 0.2);
    color: white;
    backdrop-filter: blur(5px);
}

#cameraSelect option {
    background: #333;
}


#logoutButton {
    padding: 10px 20px;
    background: linear-gradient(45deg, #d32f2f, #b71c1c);
    border: none;
    border-radius: 25px;
    color: white;
    cursor: pointer;
    transition: all 0.3s ease;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
    margin-bottom: 20px;
}

#logoutButton:hover {
    transform: translateY(-2px);
    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.3);
}
/* Responsive Adjustments */

@media (max-aspect-ratio: 1/1) {
    #videoContainer {
        aspect-ratio: 9/16; /* Make video container vertical */
    }
     #localVideo {
        width: 120px;
        height: 180px;
        right: 10px;
    }
}


/* Specialization Filter Styling */
#specSelect {
    width: 100%;
    padding: 12px;
    margin: 10px 0;
    border: 1px solid rgba(255, 255, 255, 0.3);
    border-radius: 8px;
    background: rgba(255, 255, 255, 0.2);
    color: white;
    font-size: 16px;
    outline: none;
    transition: background 0.3s ease, transform 0.2s ease;
    cursor: pointer;
    animation: fadeIn 0.8s ease-out;
}

#specSelect:hover {
    background: rgba(255, 255, 255, 0.3);
    transform: scale(1.05);
}

#specSelect:focus {
    background: rgba(255, 255, 255, 0.4);
    transform: scale(1.1);
    box-shadow: 0 0 10px rgba(255, 255, 255, 0.5);
}

#specSelect option {
    padding: 8px;
    background: #333;
    color: white;
}

/* Label Styling */
label[for="specSelect"] {
    font-size: 1rem;
    font-weight: 600;
    display: block;
    margin-bottom: 8px;
    opacity: 0;
    animation: fadeIn 1s ease-out forwards;
}

/* Fade-in animation */
@keyframes fadeIn {
    from { opacity: 0; transform: translateY(-10px); }
    to { opacity: 1; transform: translateY(0); }
}


#toggleCamera {
    /* position: fixed; /* REMOVED - container handles positioning */
    /* bottom: 60px; /* REMOVED - container handles positioning */
    /* left: 50%;   /* REMOVED - container handles positioning */
    /* transform: translateX(-50%); /* REMOVED - container handles positioning */
    /* padding: 10px 25px; /* ADJUSTED in button-container common styles */
    /* font-size: 14px; /* REMOVED - font-size is in common styles now if needed */
    background: linear-gradient(45deg, #4a90e2, #5b6ee1);
    border: none;
    border-radius: 50%; /* Make it a circle */
    color: white;
    cursor: pointer;
    box-shadow: 0 8px 25px rgba(74, 144, 226, 0.3);
    transition: all 0.3s ease;
    width: 80px; /* Set width for circle */
    height: 80px; /* Set height for circle */
    display: flex;       /* Center content */
    align-items: center; /* Center content */
    justify-content: center; /* Center content */
    font-size: 1.2em;    /* Adjust font size if needed */
}

#toggleCamera:hover {
    /* transform: translateX(-50%) scale(1.05); /* REMOVED - only scale */
    transform: scale(1.05);
    box-shadow: 0 10px 30px rgba(74, 144, 226, 0.4);
    background: linear-gradient(45deg, #5b6ee1, #4a90e2); /* Keep background hover for consistency if needed */
}

#toggleCamera:active {
    /* transform: translateX(-50%) scale(0.95); /* REMOVED - only scale */
    transform: scale(0.95);
}

/* Add this to your existing media query for mobile responsiveness */
@media (max-aspect-ratio: 1/1) {
    #toggleCamera {
        /* padding: 10px 25px; /* REMOVED - padding already in common styles if needed */
        /* font-size: 14px;  /* REMOVED - font-size is in common styles now if needed */
        /* bottom: 90px; /* REMOVED - container handles positioning */
    }
}

/* Button container positioning */
.button-container {
    position: fixed;
    bottom: 30px;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    gap: 20px;
    z-index: 1000;
}

/* Base button styles - COMMON STYLES FOR ALL BUTTONS in button-container */
#endCallButton,
#toggleCamera,
#swapStreamsButton,
#fullScreenButton,
#toggleMic { /* ADDED #toggleMic to common styles */
    /* padding: 15px 35px; /* REMOVED - padding adjusted for circle size */
    /* border-radius: 30px; /* REMOVED -  individual border-radius: 50% for circles */
    border: 2px solid rgba(255, 255, 255, 0.15);
    /* color: white; /* REMOVED - color defined in each button */
    /* font-weight: 600; /* REMOVED - font-weight defined in endCallButton */
    cursor: pointer;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    gap: 8px; /* Space between icon and text - if text is kept */
    /* font-size: 16px; /* REMOVED - font-size adjusted in each button for circle size */
    backdrop-filter: blur(5px);
    flex-direction: column; /* Stack icon and text */
    padding: 10px; /* Adjusted padding for circle buttons */
    font-size: 1.2em; /* Ensure font size is set here for the new button as well */
    border-radius: 50%; /* Make buttons circular */
    width: 80px;      /* Fixed width for circle */
    height: 80px;     /* Fixed height for circle */
    justify-content: center; /* Center content vertically */
    align-items: center;     /* Center content horizontally */
}

/* End Call Button specific styles - KEPT SPECIFIC STYLES DISTINCT */
/* #endCallButton { - NO NEED TO REDEFINE SELECTOR*/
    /* background: linear-gradient(145deg, #ff4444, #cc0000); /* KEPT */
    /* box-shadow: 0 8px 25px rgba(255, 68, 68, 0.3); /* KEPT */
    /* animation: pulse 1.5s infinite; /* KEPT */
/* } */ /* NO NEED TO REDEFINE SELECTOR*/

/* Toggle Camera Button specific styles - KEPT SPECIFIC STYLES DISTINCT */
/*#toggleCamera { - NO NEED TO REDEFINE SELECTOR*/
    /* background: linear-gradient(145deg, #4a90e2, #5b6ee1); /* KEPT - but overridden by 45deg gradient in #toggleCamera */
    /* box-shadow: 0 8px 25px rgba(74, 144, 226, 0.3); /* KEPT */
/* } */ /* NO NEED TO REDEFINE SELECTOR*/

/* Toggle Mic Button specific styles */
#toggleMic {
    background: linear-gradient(45deg, #7cb342, #558b2f); /* Green color for mic button */
    box-shadow: 0 8px 25px rgba(124, 179, 66, 0.3); /* Green shadow */
}

/* Hover effects - COMMON HOVER EFFECT - can be shared if hover effect is the same */
#endCallButton:hover,
#toggleCamera:hover,
#swapStreamsButton:hover,
#fullScreenButton:hover,
#toggleMic:hover { /* ADDED #toggleMic to hover effects */
    transform: scale(1.05);
    box-shadow: 0 12px 35px rgba(0, 0, 0, 0.4);
    filter: brightness(1.1);
}

/* Active state - COMMON ACTIVE STATE - can be shared if active effect is the same */
#endCallButton:active,
#toggleCamera:active,
#swapStreamsButton:active,
#fullScreenButton:active,
#toggleMic:active { /* ADDED #toggleMic to active state */
    transform: scale(0.95);
}

/* Pulse animation update - KEPT - specific to endCallButton */
/* @keyframes pulse { - NO NEED TO REDEFINE KEYFRAMES*/
    /* 0% { transform: scale(1); } */
    /* 50% { transform: scale(1.03); } */
    /* 100% { transform: scale(1); } */
/* } */ /* NO NEED TO REDEFINE KEYFRAMES*/

/* Mobile responsiveness */
@media (max-width: 768px) {
    .button-container {
        bottom: 20px;
        gap: 15px;
        flex-direction: row; /* Changed to row to keep buttons side by side in mobile */
        width: auto; /* Changed to auto to fit content */
    }

    #endCallButton,
    #toggleCamera,
    #swapStreamsButton,
    #fullScreenButton,
    #toggleMic { /* ADDED #toggleMic to mobile styles */
        width: 60px; /* Adjusted width for smaller circles in mobile */
        height: 60px; /* Adjusted height for smaller circles in mobile */
        /* justify-content: center; /* REMOVED - already centered by flex display */
        /* padding: 12px 25px; /* REMOVED - padding adjusted for circle size */
        font-size: 1em; /* Adjusted font size for smaller circles in mobile */
    }

    @keyframes pulse {
        0% { transform: scale(1); }
        50% { transform: scale(1.02); }
        100% { transform: scale(1); }
    }
}

.button-icon {
    font-size: 2em; /* Increased icon size */
    transition: transform 0.2s ease;
    display: block; /* Ensure icon takes full width */
    text-align: center; /* Center icon in circle */
    margin-bottom: 5px; /* Add space between icon and text */
}

.button-text {
    transition: transform 0.2s ease;
    display: block;
    text-align: center;
    font-size: 0.8em; /* Adjusted text size */
}

#endCallButton:hover .button-icon,
#toggleCamera:hover .button-icon,
#swapStreamsButton:hover .button-icon,
#fullScreenButton:hover .button-icon,
#toggleMic:hover .button-icon { /* ADDED #toggleMic to icon hover */
    transform: scale(1.2);
}

@media (max-width: 768px) {
    .button-icon {
        font-size: 1.5em; /* Adjusted icon size for mobile */
    }
    .button-text {
        display: none; /* Hide text in mobile view if desired */
    }
}

/* --- New styles for swap streams button and video swapping --- */
#swapStreamsButton {
    background: linear-gradient(45deg, #64b5f6, #1e88e5); /* Example color, adjust if needed */
    box-shadow: 0 8px 25px rgba(100, 181, 246, 0.3);
    position: relative; /* For icon positioning */
}

/* Icon for swap button (using CSS, no emojis) */
#swapStreamsButton::before,
#swapStreamsButton::after {
    content: '';
    position: absolute;
    width: 14px; /* Slightly reduced size for circular button */
    height: 14px; /* Slightly reduced size for circular button */
    border: 2px solid white;
    border-radius: 3px;
    transition: all 0.3s ease;
}

#swapStreamsButton::before {
    top: 18px; /* Adjusted position for circular button */
    left: 18px; /* Adjusted position for circular button */
    border-bottom: none;
    border-right: none;
    transform: rotate(-45deg);
}

#swapStreamsButton::after {
    bottom: 18px; /* Adjusted position for circular button */
    right: 18px; /* Adjusted position for circular button */
    border-top: none;
    border-left: none;
    transform: rotate(-45deg);
}


/* Swapped video styles - applied when 'swapped' class is added to videoContainer */
#videoContainer.swapped #remoteVideo {
    position: absolute;
    bottom: 20px;
    right: 20px;
    width: 180px;
    height: 120px;
    border-radius: 8px;
    border: 3px solid rgba(255, 255, 255, 0.9);
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
    z-index: 1; /* To ensure it's on top of the local video */
}

#videoContainer.swapped #localVideo {
    position: static; /* Revert to static positioning to fill container */
    width: 100%;
    height: 100%;
    object-fit: cover;
}

/* --- New styles for full screen button and full screen mode --- */
#fullScreenButton {
    background: linear-gradient(45deg, #ff9800, #f57c00); /* Example color, adjust if needed - Orange tone */
    box-shadow: 0 8px 25px rgba(255, 152, 0, 0.3);
    position: relative; /* For icon positioning */
}

#fullScreenButton::before {
    font-family: 'Font Awesome 6 Free'; /* Use Font Awesome for icons */
    font-weight: 900; /* Solid style */
    content: '\f0b2'; /* Full screen icon code - Font Awesome */
    color: white;
    font-size: 1.5em; /* Adjust icon size */
}

#fullScreenButton.fullscreen-exit::before {
    content: '\f0b2'; /* Minimize screen icon code - You might need a different icon for exit or reuse fullscreen icon */
    transform: rotate(180deg); /* Visually represent exiting full screen by rotating the icon */
}


/* Full screen video styles - applied when 'fullscreen' class is added to videoContainer */
#videoContainer.fullscreen {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw; /* Use vw for viewport width */
    height: 100vh; /* Use vh for viewport height */
    max-width: none; /* Remove max-width in full screen */
    z-index: 1000; /* Ensure it's on top of everything */
    border-radius: 0; /* Remove border-radius in full screen if desired */
}

#videoContainer.fullscreen #remoteVideo {
    width: 100%;
    height: 100%;
    object-fit: cover; /* Or contain, depending on desired effect */
}

#videoContainer.fullscreen #localVideo {
    position: absolute; /* Keep position absolute in full screen */
    bottom: 30px;      /* Adjust bottom spacing in full screen */
    right: 30px;       /* Adjust right spacing in full screen */
    width: 240px;      /* Scale up local video size in full screen */
    height: 160px;     /* Scale up local video size in full screen */
    border-radius: 10px; /* Adjust border-radius if needed */
    border-width: 4px;  /* Adjust border width if needed */
}

/* Add transition for smooth full screen toggle */
#videoContainer,
#videoContainer.fullscreen #remoteVideo,
#videoContainer.fullscreen #localVideo,
#remoteVideo,
#localVideo {
    transition: all 0.5s ease; /* Ensure transition is smooth for all relevant properties */
}

/* Mobile responsiveness for fullscreen mode */
@media (max-width: 768px) {
    #videoContainer.fullscreen #localVideo {
        width: 180px;      /* Adjust local video size for mobile fullscreen */
        height: 120px;     /* Adjust local video size for mobile fullscreen */
        bottom: 20px;      /* Adjust bottom spacing in mobile fullscreen */
        right: 20px;       /* Adjust right spacing in mobile fullscreen */
    }
}

/* call_style.css */
/* ... your existing CSS ... */

/* Swapped video styles - applied when 'swapped' class is added to videoContainer */
#videoContainer.swapped #remoteVideo {
    position: absolute;
    bottom: 20px;
    right: 20px;
    width: 180px;
    height: 120px;
    border-radius: 8px;
    border: 3px solid rgba(255, 255, 255, 0.9);
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
    z-index: 1; /* To ensure it's on top of the local video */
}

#videoContainer.swapped #localVideo {
    position: static; /* Revert to static positioning to fill container */
    width: 100%;
    height: 100%;
    object-fit: cover;
}
/* #76B13F */
/* --- Modified Swapped styles for Fullscreen --- */
/* Apply these styles when videoContainer has BOTH 'fullscreen' and 'swapped' classes */
#videoContainer.fullscreen.swapped #remoteVideo {
    position: absolute; /* Keep absolute in fullscreen swapped for small view */
    bottom: 30px; /* Adjust bottom position in fullscreen */
    right: 30px;  /* Adjust right position in fullscreen */
    width: 240px; /* Adjust width in fullscreen */
    height: 160px; /* Adjust height in fullscreen */
    border-radius: 10px; /* Adjust border-radius in fullscreen */
    border-width: 4px; /* Make border a bit thicker in fullscreen */
    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.3); /* Adjust shadow in fullscreen */
    z-index: 2; /* Make sure it's above the local video */
}

#videoContainer.fullscreen.swapped #localVideo {
    position: static; /* Make local video fullscreen when swapped and in fullscreen */
    width: 100%;
    height: 100%;
    object-fit: cover;
}